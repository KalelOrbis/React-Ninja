---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-client
  name: blog-client
spec:
  ports:
    - name: '3001'
      port: 3001
      targetPort: 3001
  selector:
    io.kompose.service: blog-client
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-db
  name: blog-db
spec:
  ports:
    - name: '3306'
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: blog-db
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-server
  name: blog-server
spec:
  ports:
    - name: '3000'
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: blog-server
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-client
  name: blog-client
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: blog-client
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/blog-app-default: 'true'
        io.kompose.service: blog-client
    spec:
      containers:
        - env:
            - name: CHOKIDAR_USEPOLLING
              value: 'true'
            - name: DB_HOST
              value: blog-db
          image: kaleltbz/blog-app-blog-client:latest
          name: blog-client
          ports:
            - containerPort: 3001
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /app
              name: blog-client-claim0
            - mountPath: /app/node_modules
              name: blog-client-claim1
      restartPolicy: Always
      volumes:
        - name: blog-client-claim0
          persistentVolumeClaim:
            claimName: blog-client-claim0
        - name: blog-client-claim1
          persistentVolumeClaim:
            claimName: blog-client-claim1
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blog-client-claim0
  name: blog-client-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blog-client-claim1
  name: blog-client-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: blog-app-default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/blog-app-default: 'true'
  podSelector:
    matchLabels:
      io.kompose.network/blog-app-default: 'true'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-db
  name: blog-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: blog-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/blog-app-default: 'true'
        io.kompose.service: blog-db
    spec:
      containers:
        - args:
            - --default-authentication-plugin=mysql_native_password
          env:
            - name: MARIADB_DATABASE
              value: BlogDB
            - name: MARIADB_ROOT_PASSWORD
              value: '1234'
            - name: MARIADB_ROOT_USER
              value: root
          image: mariadb:latest
          name: blog-db
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/1.sql
              name: blog-db-claim0
            - mountPath: /var/lib/mysql
              name: persistent-db
      restartPolicy: Always
      volumes:
        - name: blog-db-claim0
          persistentVolumeClaim:
            claimName: blog-db-claim0
        - name: persistent-db
          persistentVolumeClaim:
            claimName: persistent-db
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blog-db-claim0
  name: blog-db-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: persistent-db
  name: persistent-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: blog-server
  name: blog-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: blog-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out k8s-kompose.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/blog-app-default: 'true'
        io.kompose.service: blog-server
    spec:
      containers:
        - env:
            - name: CHOKIDAR_USEPOLLING
              value: 'true'
            - name: DB_HOST
              value: blog-db
            - name: DB_NAME
              value: BlogDB
            - name: DB_PASSWORD
              value: '1234'
            - name: DB_USER
              value: root
          image: kaleltbz/blog-app-blog-server:latest
          name: blog-server
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: blog-server-claim0
      restartPolicy: Always
      volumes:
        - name: blog-server-claim0
          persistentVolumeClaim:
            claimName: blog-server-claim0
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blog-server-claim0
  name: blog-server-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
